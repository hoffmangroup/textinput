#!/usr/bin/env python
# -*- python -*-
from __future__ import division

__version__ = "$Revision: 1.2 $"

import itertools
import sys

import tabdelim
from textinput import open

def read_lookup(iterable, col_index):
    res = {}

    for row in iterable:
        try:
            # exclude the joined column
            res[row[col_index]] = row[:col_index] + row[col_index+1:]
        except IndexError:
            pass

    return res

def write_joined(readerwriter, col_index, lookup):
    if options.empty is not None: # could be ""
        len_longest_row = max(itertools.imap(len, lookup.itervalues()))

    # XXX: this would be more efficient if I wrote two loops, one
    # for options.empty and one for not
    for row in readerwriter:
        try:
            lookup_row = lookup[row[col_index]]
            if options.empty is not None:
                len_difference = len_longest_row - len(lookup_row)
                if len_difference > 0:
                    lookup_row.extend([options.empty] * len_difference)
            row.extend(lookup_row)
        except KeyError:
            if options.empty is not None:
                row.extend([options.empty] * len_longest_row)

def parse_options(args):
    from optparse import OptionParser

    global options

    usage = "%prog [OPTION]... MAIN-TABLE LOOKUP-TABLE"
    version = "%%prog %s" % __version__
    parser = OptionParser(usage=usage, version=version)
    parser.add_option("-e", "--empty", metavar="EMPTY",
                      help="replace missing input fields with EMPTY"),
    parser.add_option("-1", dest="main_field", type="int", default=1,
                      metavar="FIELD",
                      help="join on this FIELD of MAIN-TABLE"),
    parser.add_option("-2", dest="lookup_field", type="int", default=1,
                      metavar="FIELD",
                      help="join on this FIELD of LOOKUP-TABLE"),

    options, args = parser.parse_args(args)

    return args

def innerjoin(main_filename, lookup_filename):
    lookup_reader = tabdelim.ListReader(open(lookup_filename))
    lookup = read_lookup(lookup_reader, options.lookup_field-1)

    main_readerwriter = tabdelim.ListReaderWriter(open(main_filename))
    write_joined(main_readerwriter, options.main_field-1, lookup)

def main(args):
    args = parse_options(args)
    assert len(args) == 2

    return innerjoin(*args)

if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
