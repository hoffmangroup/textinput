#!/usr/bin/env python2.3
# -*- python -*-
from __future__ import division

__version__ = "$Revision: 1.2 $"

import sys

import tabdelim

def filter(codestr, *filenames):
    code = compile(codestr, "<string>", "eval")

    if options.listmode:
        reader_func = tabdelim.listinput
    else:
        reader_func = tabdelim.dictinput
        
    reader = reader_func(filenames)
    writer = reader.writer()
    
    for row in reader:
        if options.listmode:
            if eval(code, globals(), dict(_=row)):
                writer.writerow(row)
        else:
            if eval(code, globals(), row):
                writer.writerow(row)

def parse_options(args):
    from optparse import OptionParser

    global options
    
    usage = "%prog [OPTION]..."
    version = "%%prog %s" % __version__
    parser = OptionParser(usage=usage, version=version)

    parser.add_option("-H", "--no-header",
                      action="store_true", dest="listmode",
                      help="input does not contain a header line")
    
    options, args = parser.parse_args(args)

    return args

def main(args):
    args = parse_options(args)

    return filter(*args)

if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
